function t(){return t=Object.assign?Object.assign.bind():function(t){for(var s=1;s<arguments.length;s++){var e=arguments[s];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},t.apply(this,arguments)}class s{constructor(t={},s=null,e=null){this._gsap=s,this._ScrollTrigger=e,this.elements=t.elements||"[data-onscroll]",this.screen=t.screen||"(min-width: 1025px)",this.triggers=new Map,this.debug=t.debug||!1,this.scrollingClass=t.scrollingClass||"is-scrolling",this.scrolledClass=t.scrolledClass||"has-scrolled",this.stickyClass=t.stickyClass||"is-sticky",this.stuckClass=t.stuckClass||"has-stuck",this.eventHandlers={},this.autoStart=void 0===t.autoStart||t.autoStart,this.autoStart&&this.init()}register(t,s){this._gsap=t,this._ScrollTrigger=s}init(){if(null!=this._gsap)if(null!=this._ScrollTrigger)try{this._gsap.utils.toArray(this.elements).forEach((t,s)=>{const e=this.getTrigger(t),r=this.getScreen(t),i=this._gsap.matchMedia(),o=this.getFromProperties(t);o.startAt={backgroundColor:"red"},o.immediateRender=!0;const a=this.getToProperties(t,s,e);i.add(r,()=>{const s=this._gsap.fromTo(t,o,a);this.triggers.set(s.scrollTrigger,{element:t,fromProperties:o,toProperties:a,gsapAnimation:s})}),this.debugMode(t,s)})}catch(t){console.error("Error initialising OnscrollDetection:",t)}else console.log("ScrollTrigger is not registered. Exiting");else console.log("GSAP is not registered. Exiting")}start(){this.init()}on(t,s){this.eventHandlers[t]||(this.eventHandlers[t]=[]),this.eventHandlers[t].push(s)}emit(t,...s){this.eventHandlers[t]&&this.eventHandlers[t].forEach(t=>t(...s))}getTrigger(t){return this.hasAttributes(t,["data-onscroll-auto"])&&!t.hasAttribute("data-onscroll-trigger")?t.parentElement:t.hasAttribute("data-onscroll-trigger")?document.querySelector(t.dataset.onscrollTrigger)||(console.error(`Element specified by data-onscroll-trigger not found: ${t.dataset.onscrollTrigger}`),t):t}getScreen(t){return t.hasAttribute("data-onscroll-screen")?t.dataset.onscrollScreen:this.screen}getFromProperties(s){const e=this.getAnimateFrom(s),{offset:r}=this.getOffsetAndDistance(s);return t({},e,{bottom:this.hasAttributes(s,["data-onscroll-auto","data-onscroll-reverse"])?"auto":null,top:this.hasAttributes(s,["data-onscroll-auto"])&&!this.hasAttributes(s,["data-onscroll-reverse"])?"auto":null,x:!this.hasAttributes(s,["data-onscroll-direction"])||"x"!==this.getDirection(s)&&"xy"!==this.getDirection(s)?null:r,y:!this.hasAttributes(s,["data-onscroll-direction"])||this.hasAttributes(s,["data-onscroll-direction"])&&("y"===this.getDirection(s)||"xy"===this.getDirection(s))?r:null})}getToProperties(s,e,r){const i=this.getAnimateTo(s),o=this.getStickyProperties(s),a=this.hasAttributes(s,["data-onscroll-sticky"]),n=s.getAttribute("data-onscroll-call"),l=s.getAttribute("data-onscroll-progress"),c=(t,e)=>{n&&window.dispatchEvent(new CustomEvent(n,{detail:{target:s,direction:1===e?"down":"up",when:t}}))};return t({},i,{x:this.getX(s),y:this.getY(s),ease:"none",scrollTrigger:{trigger:a?s:r,start:this.getStart(s),end:this.getEnd(s),invalidateOnRefresh:!0,pin:o.pin,pinSpacing:o.pinSpacing,scrub:this.getScrub(s),markers:this.hasAttributes(s,["data-onscroll-debug"]),onUpdate:t=>{let e=t.progress.toFixed(2);s.style.setProperty("--onscrollProgress",e),l&&((t,e)=>{l&&window.dispatchEvent(new CustomEvent(l,{detail:{element:s,progress:t,direction:1===e?"down":"up"}}))})(e,t.direction)},onToggle:t=>{t.isActive||s.style.setProperty("--onscrollProgress",0)},onEnter:({direction:t})=>{s.classList.add(this.scrollingClass,this.scrolledClass),a&&s.classList.add(this.stickyClass,this.stuckClass),c("onEnter",t),this.emit("onEnter",s)},onLeave:({direction:t})=>{s.classList.remove(this.scrollingClass),a&&s.classList.remove(this.stickyClass),c("onLeave",t),this.emit("onLeave",s)},onEnterBack:({direction:t})=>{s.classList.add(this.scrollingClass),a&&s.classList.add(this.stickyClass),c("onEnterBack",t),this.emit("onEnterBack",s)},onLeaveBack:({direction:t})=>{s.classList.remove(this.scrollingClass),a&&s.classList.remove(this.stickyClass),c("onLeaveBack",t),this.emit("onLeaveBack",s)}}})}getStickyProperties(t){return t.hasAttribute("data-onscroll-sticky")?{pin:!0,pinSpacing:!1}:{pin:!1,pinSpacing:!0}}hasAttributes(t,s){return s.every(s=>t.hasAttribute(s))}getAnimateFrom(t){return t.hasAttribute("data-onscroll-from")?JSON.parse(t.dataset.onscrollFrom):[]}getAnimateTo(t){return t.hasAttribute("data-onscroll-to")?JSON.parse(t.dataset.onscrollTo):[]}getOffset(t){return t.hasAttribute("data-onscroll-offset")?parseInt(t.dataset.onscrollOffset):null}getDirection(t){return t.dataset.onscrollDirection?t.dataset.onscrollDirection:"y"}getX(t){return t.hasAttribute("data-onscroll-sticky")?null:!this.hasAttributes(t,["data-onscroll-direction"])||"x"!==this.getDirection(t)&&"xy"!==this.getDirection(t)?void 0:this.getDistanceOrSpeed(t)}getY(t){return t.hasAttribute("data-onscroll-sticky")?null:!this.hasAttributes(t,["data-onscroll-direction"])||this.hasAttributes(t,["data-onscroll-direction"])&&("y"===this.getDirection(t)||"xy"===this.getDirection(t))?this.getDistanceOrSpeed(t):void 0}getOffsetAndDistance(t){if(t.hasAttribute("data-onscroll-sticky"))return{offset:null,distance:null};let s=null,e=null;const r=this.getTrigger(t).offsetHeight;if(t.hasAttribute("data-onscroll-offset")){const[i,o]=t.dataset.onscrollOffset.split(",");s=i.trim().endsWith("%")?parseFloat(i)/100*r:parseFloat(i),e=o.trim().endsWith("%")?parseFloat(o)/100*r:parseFloat(o)}return{offset:s,distance:e}}getDistanceOrSpeed(t){const{distance:s}=this.getOffsetAndDistance(t),e=window.innerHeight;let r=t.dataset.onscrollSpeed,i=0;if(r&&r.includes(",")){const[t,s]=r.split(",").map(parseFloat);r=t,i=s/100*e,r<0&&(i*=-1)}else r=parseFloat(r||"0");if(this.hasAttributes(t,["data-onscroll-auto"])){const s=this.getTrigger(t),e=Math.abs(s.offsetHeight-t.offsetHeight);return this.hasAttributes(t,["data-onscroll-reverse"])?-e:e}return this.hasAttributes(t,["data-onscroll-speed"])?r*t.offsetHeight+i:null!==s?s:void 0}getScrub(t){return!this.hasAttributes(t,["data-onscroll-delay"])||parseInt(t.dataset.onscrollDelay)}getStart(t){if(t.hasAttribute("data-onscroll-sticky")){let s=0;if(t.hasAttribute("data-onscroll-offset")){const[e]=t.dataset.onscrollOffset.split(",");s=parseFloat(e)}return(t.dataset.onscrollStart?t.dataset.onscrollStart:"top top")+"+="+s}if(this.hasAttributes(t,["data-onscroll-preset","data-onscroll-offset"])&&"x"!==this.getDirection(t)&&!this.hasAttributes(t,["data-onscroll-start","data-onscroll-sticky"])){const[s]=t.dataset.onscrollOffset.split(",");return(parseFloat(s)<0?"top+="+s:"top+=0")+" bottom"}return t.dataset.onscrollStart?t.dataset.onscrollStart:"top bottom"}getEnd(t){if(t.hasAttribute("data-onscroll-sticky")){const s=this.getTrigger(t);let e=0;if(t.hasAttribute("data-onscroll-offset")){const[,s]=t.dataset.onscrollOffset.split(",");e=parseFloat(s)}return t.dataset.onscrollEnd?t.dataset.onscrollEnd:"+="+(s.clientHeight-t.clientHeight-e)}if(this.hasAttributes(t,["data-onscroll-speed"])&&!t.hasAttribute("data-onscroll-end")){const s=this.getDistanceOrSpeed(t);return`bottom${s>=0?"+=":"-="}${Math.abs(s)} top`}if(this.hasAttributes(t,["data-onscroll-preset","data-onscroll-offset"])&&"x"!==this.getDirection(t)&&!this.hasAttributes(t,["data-onscroll-end","data-onscroll-sticky"])){const[,s]=t.dataset.onscrollOffset.split(",");return"bottom+="+s+" top"}return t.dataset.onscrollEnd?t.dataset.onscrollEnd:"bottom top"}debugMode(t,s){if(!this.debug&&!this.hasAttributes(t,["data-onscroll-debug"]))return;const{offset:e}=this.getOffsetAndDistance(t);let r=0,i=0;if(this.hasAttributes(t,["data-onscroll-speed"])){const s=t.dataset.onscrollSpeed.split(",");r=parseFloat(s[0]),i=parseFloat(s[1]),r=isNaN(r)?0:r,i=isNaN(i)?0:i}const o=t.dataset,a=this.hasAttributes(t,["data-onscroll-speed"]),n=this.hasAttributes(t,["data-onscroll-preset"]),l=this.hasAttributes(t,["data-onscroll-sticky"]),c=this.hasAttributes(t,["data-onscroll-reverse"]);console.group(`OnscrollDetection() debug instance (#${s+1})`),console.log({element:t,trigger:this.getTrigger(t),triggerStart:this.getStart(t),triggerEnd:this.getEnd(t),auto:this.hasAttributes(t,["data-onscroll-auto"]),offsetBefore:e,offsetAfter:this.getDistanceOrSpeed(t),delay:this.getScrub(t),screen:this.getScreen(t),speed:a?`${parseFloat(r*t.clientHeight+i/100*window.innerHeight)} (${parseFloat(r)}x element height + ${parseFloat(i)}% of the viewport height)`:null,direction:this.hasAttributes(t,["data-onscroll-direction"])?o.onscrollDirection:"y",preset:n,reverse:c,sticky:l,animateFrom:this.getAnimateFrom(t),animateTo:this.getAnimateTo(t),customEvent:this.hasAttributes(t,["data-onscroll-call"])?o.onscrollCall:null}),[{condition:this.hasAttributes(t,["data-onscroll-offset"])&&a,message:"`offset` and `speed` should not be used together"},{condition:n&&(this.hasAttributes(t,["data-onscroll-start"])||this.hasAttributes(t,["data-onscroll-end"])),message:"`preset` should not be used in conjunction with `start` or `end` settings"},{condition:l&&a,message:"`sticky` should not be used in conjunction with `speed`"},{condition:l&&this.hasAttributes(t,["data-onscroll-offset"])&&this.hasAttributes(t,["data-onscroll-end"]),message:"Your bottom `offset` will be ignored due to custom `end` on the `sticky` element"},{condition:c&&(!this.hasAttributes(t,["data-onscroll-auto"])||this.hasAttributes(t,["data-onscroll-offset"])||l||a),message:"`reverse` is not compatible with `offset`, `speed` or `sticky` and should only be used in conjunction with `auto`"},{condition:a&&n,message:"`preset` has no effect in conjunction with `speed` setting"},{condition:"x"===this.getDirection(t)&&n,message:"`preset` has no effect in conjunction with `x` direction"}].forEach(t=>t.condition&&console.warn(t.message)),console.groupEnd()}fetch(t){if("number"==typeof t)return Array.from(this.triggers.keys())[t];{let s=null;return this.triggers.forEach((e,r)=>{e.element===t&&(s=r)}),s}}refresh(){this._ScrollTrigger.refresh(),this.emit("refresh")}restart(){this.stop(),this._ScrollTrigger.getAll().forEach(t=>t.kill()),this._ScrollTrigger.refresh(),this.init(),this.emit("restart")}stop(t=null){if(t){const s=this.triggers.get(t);s&&(s.gsapAnimation.kill(),this.triggers.delete(t))}else this.triggers.forEach(({gsapAnimation:t})=>{t.kill()}),this.triggers.clear();this.emit("stop",t)}update(s,e,r){const i=this.triggers.get(s);if(i){i.gsapAnimation.kill();const o=this._gsap.fromTo(i.element,e,r),a=this._ScrollTrigger.create({animation:o,trigger:this.getTrigger(i.element),start:this.getStart(i.element),end:this.getEnd(i.element),scrub:this.getScrub(i.element)});this.triggers.set(s,t({},i,{fromProperties:e,toProperties:r,gsapAnimation:o,trigger:a}))}}destroy(){this.stop(),this.triggers=null}}export{s as default};
//# sourceMappingURL=onscroll-detection.modern.mjs.map
