{"version":3,"file":"onscroll-detection.mjs","sources":["../src/index.js"],"sourcesContent":["/**\n * Written by Elliott Mangham at Code Resolution.\n * Maintained by Code Resolution.\n * made@coderesolution.com\n */\nexport default class OnscrollDetection {\n\tconstructor(options = {}, gsap = null, ScrollTrigger = null) {\n\t\t// Set dependencies\n\t\tthis._gsap = gsap\n\t\tthis._ScrollTrigger = ScrollTrigger\n\n\t\t// Initialise class properties with default values or provided options\n\t\tthis.elements = options.elements || '[data-onscroll]'\n\t\tthis.screen = options.screen || '(min-width: 1025px)'\n\t\tthis.triggers = new Map()\n\t\tthis.debug = options.debug || false\n\n\t\t// Set class names to defaults or provided options\n\t\tthis.scrollingClass = options.scrollingClass || 'is-scrolling'\n\t\tthis.scrolledClass = options.scrolledClass || 'has-scrolled'\n\t\tthis.stickyClass = options.stickyClass || 'is-sticky'\n\t\tthis.stuckClass = options.stuckClass || 'has-stuck'\n\n\t\t// Initialise event handlers\n\t\tthis.eventHandlers = {}\n\n\t\t// Set autoStart to true by default, or use provided value\n\t\tthis.autoStart = options.autoStart !== undefined ? options.autoStart : true\n\n\t\t// Initialise the class\n\t\tif (this.autoStart) {\n\t\t\tthis.init()\n\t\t}\n\t}\n\n\t// Register GSAP and plugins\n\tregister(gsap, ScrollTrigger) {\n\t\tthis._gsap = gsap\n\t\tthis._ScrollTrigger = ScrollTrigger\n\t}\n\n\t// Initialisation function\n\tinit() {\n\t\t// Check if gsap is registered\n\t\tif (this._gsap === null || this._gsap === undefined) {\n\t\t\tconsole.log('GSAP is not registered. Exiting')\n\t\t\treturn\n\t\t}\n\n\t\t// Check if ScrollTrigger is registered\n\t\tif (this._ScrollTrigger === null || this._ScrollTrigger === undefined) {\n\t\t\tconsole.log('ScrollTrigger is not registered. Exiting')\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\t// Convert elements to an array and loop through each\n\t\t\tthis._gsap.utils.toArray(this.elements).forEach((element, index) => {\n\t\t\t\t// Get the trigger element\n\t\t\t\tconst trigger = this.getTrigger(element)\n\n\t\t\t\t// Get the screen media query\n\t\t\t\tconst screen = this.getScreen(element)\n\n\t\t\t\t// Create a matchMedia instance\n\t\t\t\tconst matchMedia = this._gsap.matchMedia()\n\n\t\t\t\t// Get the animation properties for 'from' state\n\t\t\t\tconst fromProperties = this.getFromProperties(element)\n\n\t\t\t\tfromProperties.startAt = { backgroundColor: 'red' }\n\t\t\t\tfromProperties.immediateRender = true\n\n\t\t\t\t// Get the animation properties for 'to' state\n\t\t\t\tconst toProperties = this.getToProperties(element, index, trigger)\n\n\t\t\t\t// Add the animation to the matchMedia instance and store the ScrollTrigger instance\n\t\t\t\tmatchMedia.add(screen, () => {\n\t\t\t\t\tconst gsapAnimation = this._gsap.fromTo(element, fromProperties, toProperties)\n\n\t\t\t\t\tthis.triggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tfromProperties,\n\t\t\t\t\t\ttoProperties,\n\t\t\t\t\t\tgsapAnimation,\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\t// Enable debug mode for logging\n\t\t\t\tthis.debugMode(element, index)\n\t\t\t})\n\t\t} catch (error) {\n\t\t\t// Catch and log any errors\n\t\t\tconsole.error('Error initialising OnscrollDetection:', error)\n\t\t}\n\t}\n\n\t// Function to load and initialize the class\n\tstart() {\n\t\t// Initialize the class\n\t\tthis.init()\n\t}\n\n\t// Events\n\ton(event, handler) {\n\t\tif (!this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event] = []\n\t\t}\n\t\tthis.eventHandlers[event].push(handler)\n\t}\n\n\temit(event, ...args) {\n\t\tif (this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event].forEach((handler) => handler(...args))\n\t\t}\n\t}\n\n\t// Get the trigger element for ScrollTrigger\n\tgetTrigger(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto']) && !element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-auto is present and data-onscroll-trigger is not, use the parent element as the trigger\n\t\t\treturn element.parentElement\n\t\t} else if (element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-trigger is present, try to find the DOM element specified by the attribute\n\t\t\tlet triggerElement = document.querySelector(element.dataset.onscrollTrigger)\n\t\t\tif (triggerElement) {\n\t\t\t\treturn triggerElement\n\t\t\t} else {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Element specified by data-onscroll-trigger not found: ${element.dataset.onscrollTrigger}`\n\t\t\t\t)\n\t\t\t\treturn element\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, use the element itself as the trigger\n\t\t\treturn element\n\t\t}\n\t}\n\n\t// Get the screen media query\n\tgetScreen(element) {\n\t\treturn element.hasAttribute('data-onscroll-screen') ? element.dataset.onscrollScreen : this.screen\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetFromProperties(element) {\n\t\tconst animateFrom = this.getAnimateFrom(element)\n\t\tconst { offset } = this.getOffsetAndDistance(element)\n\n\t\treturn {\n\t\t\t...animateFrom,\n\t\t\tbottom: this.hasAttributes(element, ['data-onscroll-auto', 'data-onscroll-reverse']) ? 'auto' : null,\n\t\t\ttop:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-auto']) &&\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-reverse'])\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: null,\n\t\t\tx:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t\ty:\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t}\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetToProperties(element, index, trigger) {\n\t\tconst animateTo = this.getAnimateTo(element)\n\t\tconst stickyProperties = this.getStickyProperties(element)\n\t\tconst isSticky = this.hasAttributes(element, ['data-onscroll-sticky'])\n\t\tconst customEventName = element.getAttribute('data-onscroll-call')\n\t\tconst progressEventName = element.getAttribute('data-onscroll-progress')\n\n\t\t// Helper function to dispatch the custom event\n\t\tconst dispatchCustomEvent = (when, direction) => {\n\t\t\tif (customEventName) {\n\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(customEventName, {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\t// Helper function to dispatch progress event\n\t\tconst dispatchProgressEvent = (progress, direction) => {\n\t\t\tif (progressEventName) {\n\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(progressEventName, {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\tprogress: progress,\n\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...animateTo,\n\t\t\tx: this.getX(element),\n\t\t\ty: this.getY(element),\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: isSticky ? element : trigger,\n\t\t\t\tstart: this.getStart(element),\n\t\t\t\tend: this.getEnd(element),\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tpin: stickyProperties.pin,\n\t\t\t\tpinSpacing: stickyProperties.pinSpacing,\n\t\t\t\tscrub: this.getScrub(element),\n\t\t\t\tmarkers: this.hasAttributes(element, ['data-onscroll-debug']),\n\t\t\t\tonUpdate: (self) => {\n\t\t\t\t\tlet progress = self.progress.toFixed(2)\n\t\t\t\t\telement.style.setProperty('--onscrollProgress', progress)\n\n\t\t\t\t\tif (progressEventName) {\n\t\t\t\t\t\tdispatchProgressEvent(progress, self.direction)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonToggle: (self) => {\n\t\t\t\t\tif (!self.isActive) {\n\t\t\t\t\t\telement.style.setProperty('--onscrollProgress', 0)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonEnter: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.scrollingClass, this.scrolledClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.stickyClass, this.stuckClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onEnter', direction)\n\t\t\t\t\tthis.emit('onEnter', element)\n\t\t\t\t},\n\t\t\t\tonLeave: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onLeave', direction)\n\t\t\t\t\tthis.emit('onLeave', element)\n\t\t\t\t},\n\t\t\t\tonEnterBack: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onEnterBack', direction)\n\t\t\t\t\tthis.emit('onEnterBack', element)\n\t\t\t\t},\n\t\t\t\tonLeaveBack: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onLeaveBack', direction)\n\t\t\t\t\tthis.emit('onLeaveBack', element)\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}\n\n\t// Get the sticky properties for ScrollTrigger animation\n\tgetStickyProperties(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { pin: true, pinSpacing: false }\n\t\t} else {\n\t\t\treturn { pin: false, pinSpacing: true }\n\t\t}\n\t}\n\n\t// Check if an element has all the specified attributes\n\thasAttributes(element, attrs) {\n\t\treturn attrs.every((attr) => element.hasAttribute(attr))\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetAnimateFrom(element) {\n\t\treturn element.hasAttribute('data-onscroll-from') ? JSON.parse(element.dataset.onscrollFrom) : []\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetAnimateTo(element) {\n\t\treturn element.hasAttribute('data-onscroll-to') ? JSON.parse(element.dataset.onscrollTo) : []\n\t}\n\n\t// Get the offset value\n\tgetOffset(element) {\n\t\treturn element.hasAttribute('data-onscroll-offset') ? parseInt(element.dataset.onscrollOffset) : null\n\t}\n\n\t// Get the scroll direction\n\tgetDirection(element) {\n\t\treturn element.dataset.onscrollDirection ? element.dataset.onscrollDirection : 'y'\n\t}\n\n\t// Get the 'x' value for ScrollTrigger animation\n\tgetX(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the 'y' value for ScrollTrigger animation\n\tgetY(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the offset and distance values\n\tgetOffsetAndDistance(element) {\n\t\t// Check if the element has the data-onscroll-sticky attribute\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { offset: null, distance: null }\n\t\t}\n\n\t\tlet offset = null\n\t\tlet distance = null\n\t\tconst triggerElement = this.getTrigger(element)\n\t\tconst triggerHeight = triggerElement.offsetHeight\n\n\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\n\t\t\t// If the offset value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (offsetValue.trim().endsWith('%')) {\n\t\t\t\tconst offsetPercentage = parseFloat(offsetValue) / 100\n\t\t\t\toffset = offsetPercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\toffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\t// If the distance value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (distanceValue.trim().endsWith('%')) {\n\t\t\t\tconst distancePercentage = parseFloat(distanceValue) / 100\n\t\t\t\tdistance = distancePercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\tdistance = parseFloat(distanceValue)\n\t\t\t}\n\t\t}\n\n\t\treturn { offset, distance }\n\t}\n\n\t// Get the distance or speed value for ScrollTrigger animation\n\tgetDistanceOrSpeed(element) {\n\t\tconst { distance } = this.getOffsetAndDistance(element)\n\t\tconst viewportHeight = window.innerHeight\n\t\tlet scrollSpeed = element.dataset.onscrollSpeed\n\t\tlet additionalDistance = 0\n\n\t\t// Check if there are two values\n\t\tif (scrollSpeed && scrollSpeed.includes(',')) {\n\t\t\tconst [speed, percentage] = scrollSpeed.split(',').map(parseFloat)\n\n\t\t\t// Update the scrollSpeed and calculate the additional distance\n\t\t\tscrollSpeed = speed\n\t\t\tadditionalDistance = (percentage / 100) * viewportHeight\n\n\t\t\t// If scrollSpeed is negative, subtract the additional distance\n\t\t\tif (scrollSpeed < 0) {\n\t\t\t\tadditionalDistance *= -1\n\t\t\t}\n\t\t} else {\n\t\t\tscrollSpeed = parseFloat(scrollSpeed || '0')\n\t\t}\n\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto'])) {\n\t\t\tconst triggerElement = this.getTrigger(element)\n\t\t\tconst autoDistance = Math.abs(triggerElement.offsetHeight - element.offsetHeight)\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -autoDistance : autoDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\tconst elementHeight = element.offsetHeight\n\t\t\tconst scrollDistance = scrollSpeed * elementHeight + additionalDistance\n\t\t\treturn scrollDistance\n\t\t} else if (distance !== null) {\n\t\t\treturn distance\n\t\t}\n\t}\n\n\t// Get the delay value which controls the scrub setting\n\tgetScrub(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-delay'])) {\n\t\t\treturn parseInt(element.dataset.onscrollDelay)\n\t\t} else {\n\t\t\treturn true // Default scrub value if no 'data-onscroll-delay' attribute is present\n\t\t}\n\t}\n\n\t// Get the start value for ScrollTrigger animation\n\tgetStart(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [offsetValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\treturn (element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top top') + '+=' + stickyOffset\n\t\t} else if (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-preset', 'data-onscroll-offset']) &&\n\t\t\tthis.getDirection(element) !== 'x' &&\n\t\t\t!this.hasAttributes(element, ['data-onscroll-start', 'data-onscroll-sticky'])\n\t\t) {\n\t\t\tconst [offsetValue] = element.dataset.onscrollOffset.split(',')\n\t\t\tlet positionElement = parseFloat(offsetValue) < 0 ? 'top+=' + offsetValue : 'top+=0'\n\t\t\tlet positionMarker = 'bottom'\n\n\t\t\treturn positionElement + ' ' + positionMarker\n\t\t} else {\n\t\t\treturn element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top bottom'\n\t\t}\n\t}\n\n\t// Get the end value for ScrollTrigger animation\n\tgetEnd(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tconst trigger = this.getTrigger(element)\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(distanceValue)\n\t\t\t}\n\n\t\t\tconst stickyDistance = trigger.clientHeight - element.clientHeight - stickyOffset\n\n\t\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : '+=' + stickyDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed']) && !element.hasAttribute('data-onscroll-end')) {\n\t\t\tconst scrollDistance = this.getDistanceOrSpeed(element)\n\n\t\t\treturn `bottom${scrollDistance >= 0 ? '+=' : '-='}${Math.abs(scrollDistance)} top`\n\t\t} else if (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-preset', 'data-onscroll-offset']) &&\n\t\t\tthis.getDirection(element) !== 'x' &&\n\t\t\t!this.hasAttributes(element, ['data-onscroll-end', 'data-onscroll-sticky'])\n\t\t) {\n\t\t\tconst [, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\tlet positionElement = 'bottom+=' + distanceValue\n\t\t\tlet positionMarker = 'top'\n\n\t\t\treturn positionElement + ' ' + positionMarker\n\t\t} else {\n\t\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : 'bottom top'\n\t\t}\n\t}\n\n\t// Enable debug mode for logging\n\tdebugMode(element, index) {\n\t\tif (!this.debug && !this.hasAttributes(element, ['data-onscroll-debug'])) return\n\n\t\tconst { offset /*, distance*/ } = this.getOffsetAndDistance(element)\n\t\tlet speedMultiplier = 0\n\t\tlet speedViewportPercentage = 0\n\n\t\tif (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\tconst speedValues = element.dataset.onscrollSpeed.split(',')\n\n\t\t\tspeedMultiplier = parseFloat(speedValues[0])\n\t\t\tspeedViewportPercentage = parseFloat(speedValues[1])\n\n\t\t\t// Provide defaults in case parsing failed\n\t\t\tspeedMultiplier = isNaN(speedMultiplier) ? 0 : speedMultiplier\n\t\t\tspeedViewportPercentage = isNaN(speedViewportPercentage) ? 0 : speedViewportPercentage\n\t\t}\n\n\t\tconst attrs = element.dataset\n\t\tconst hasSpeed = this.hasAttributes(element, ['data-onscroll-speed'])\n\t\tconst hasPreset = this.hasAttributes(element, ['data-onscroll-preset'])\n\t\tconst hasSticky = this.hasAttributes(element, ['data-onscroll-sticky'])\n\t\tconst hasReverse = this.hasAttributes(element, ['data-onscroll-reverse'])\n\n\t\tconsole.group(`OnscrollDetection() debug instance (#${index + 1})`)\n\t\tconsole.log({\n\t\t\telement: element,\n\t\t\ttrigger: this.getTrigger(element),\n\t\t\ttriggerStart: this.getStart(element),\n\t\t\ttriggerEnd: this.getEnd(element),\n\t\t\tauto: this.hasAttributes(element, ['data-onscroll-auto']),\n\t\t\toffsetBefore: offset,\n\t\t\toffsetAfter: this.getDistanceOrSpeed(element),\n\t\t\tdelay: this.getScrub(element),\n\t\t\tscreen: this.getScreen(element),\n\t\t\tspeed: hasSpeed\n\t\t\t\t? `${parseFloat(\n\t\t\t\t\t\tspeedMultiplier * element.clientHeight + (speedViewportPercentage / 100) * window.innerHeight\n\t\t\t\t  )} (${parseFloat(speedMultiplier)}x element height + ${parseFloat(\n\t\t\t\t\t\tspeedViewportPercentage\n\t\t\t\t  )}% of the viewport height)`\n\t\t\t\t: null,\n\t\t\tdirection: this.hasAttributes(element, ['data-onscroll-direction']) ? attrs.onscrollDirection : 'y',\n\t\t\tpreset: hasPreset,\n\t\t\treverse: hasReverse,\n\t\t\tsticky: hasSticky,\n\t\t\tanimateFrom: this.getAnimateFrom(element),\n\t\t\tanimateTo: this.getAnimateTo(element),\n\t\t\tcustomEvent: this.hasAttributes(element, ['data-onscroll-call']) ? attrs.onscrollCall : null,\n\t\t})\n\n\t\tconst warnings = [\n\t\t\t{\n\t\t\t\tcondition: this.hasAttributes(element, ['data-onscroll-offset']) && hasSpeed,\n\t\t\t\tmessage: '`offset` and `speed` should not be used together',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcondition:\n\t\t\t\t\thasPreset &&\n\t\t\t\t\t(this.hasAttributes(element, ['data-onscroll-start']) ||\n\t\t\t\t\t\tthis.hasAttributes(element, ['data-onscroll-end'])),\n\t\t\t\tmessage: '`preset` should not be used in conjunction with `start` or `end` settings',\n\t\t\t},\n\t\t\t{ condition: hasSticky && hasSpeed, message: '`sticky` should not be used in conjunction with `speed`' },\n\t\t\t{\n\t\t\t\tcondition:\n\t\t\t\t\thasSticky &&\n\t\t\t\t\tthis.hasAttributes(element, ['data-onscroll-offset']) &&\n\t\t\t\t\tthis.hasAttributes(element, ['data-onscroll-end']),\n\t\t\t\tmessage: 'Your bottom `offset` will be ignored due to custom `end` on the `sticky` element',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcondition:\n\t\t\t\t\thasReverse &&\n\t\t\t\t\t(!this.hasAttributes(element, ['data-onscroll-auto']) ||\n\t\t\t\t\t\tthis.hasAttributes(element, ['data-onscroll-offset']) ||\n\t\t\t\t\t\thasSticky ||\n\t\t\t\t\t\thasSpeed),\n\t\t\t\tmessage:\n\t\t\t\t\t'`reverse` is not compatible with `offset`, `speed` or `sticky` and should only be used in conjunction with `auto`',\n\t\t\t},\n\t\t\t{ condition: hasSpeed && hasPreset, message: '`preset` has no effect in conjunction with `speed` setting' },\n\t\t\t{\n\t\t\t\tcondition: this.getDirection(element) === 'x' && hasPreset,\n\t\t\t\tmessage: '`preset` has no effect in conjunction with `x` direction',\n\t\t\t},\n\t\t]\n\n\t\twarnings.forEach((warning) => warning.condition && console.warn(warning.message))\n\t\tconsole.groupEnd()\n\t}\n\n\t// Fetch a trigger\n\tfetch(elementOrIndex) {\n\t\tif (typeof elementOrIndex === 'number') {\n\t\t\t// Treat argument as an index\n\t\t\tconst keys = Array.from(this.triggers.keys())\n\t\t\treturn keys[elementOrIndex]\n\t\t} else {\n\t\t\t// Assume argument is a DOM element\n\t\t\tlet trigger = null\n\t\t\tthis.triggers.forEach((value, key) => {\n\t\t\t\tif (value.element === elementOrIndex) {\n\t\t\t\t\ttrigger = key\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn trigger\n\t\t}\n\t}\n\n\t// Refresh ScrollTrigger instances\n\trefresh() {\n\t\tthis._ScrollTrigger.refresh()\n\n\t\t// Emit event after refresh is done\n\t\tthis.emit('refresh')\n\t}\n\n\t// Restart the animations and reinitialize the ScrollTrigger instances\n\trestart() {\n\t\t// Stop the current animations and remove ScrollTriggers\n\t\tthis.stop()\n\n\t\t// Kill all existing ScrollTrigger instances\n\t\tthis._ScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n\n\t\t// Refresh ScrollTrigger\n\t\tthis._ScrollTrigger.refresh()\n\n\t\t// Reapply animations and initialize ScrollTrigger\n\t\tthis.init()\n\n\t\t// Emit event after restart is done\n\t\tthis.emit('restart')\n\t}\n\n\t// Stop animations and ScrollTriggers\n\tstop(target = null) {\n\t\tif (target) {\n\t\t\t// Stop animation and remove the ScrollTrigger for a specific target\n\t\t\tconst animationData = this.triggers.get(target)\n\t\t\tif (animationData) {\n\t\t\t\tanimationData.gsapAnimation.kill()\n\t\t\t\tthis.triggers.delete(target)\n\t\t\t}\n\t\t} else {\n\t\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\t\tthis.triggers.forEach(({ gsapAnimation }) => {\n\t\t\t\tgsapAnimation.kill()\n\t\t\t})\n\t\t\tthis.triggers.clear()\n\t\t}\n\n\t\t// Emit event after stop is done\n\t\tthis.emit('stop', target)\n\t}\n\n\t// Update animation for a specific target with new fromProperties and toProperties\n\tupdate(target, fromProperties, toProperties) {\n\t\tconst animationData = this.triggers.get(target)\n\n\t\tif (animationData) {\n\t\t\t// Stop the existing animation\n\t\t\tanimationData.gsapAnimation.kill()\n\n\t\t\t// Reinitialize the animation with updated properties\n\t\t\tconst gsapAnimation = this._gsap.fromTo(animationData.element, fromProperties, toProperties)\n\n\t\t\t// Create new ScrollTrigger for the updated animation\n\t\t\tconst trigger = this._ScrollTrigger.create({\n\t\t\t\tanimation: gsapAnimation,\n\t\t\t\ttrigger: this.getTrigger(animationData.element),\n\t\t\t\tstart: this.getStart(animationData.element),\n\t\t\t\tend: this.getEnd(animationData.element),\n\t\t\t\tscrub: this.getScrub(animationData.element),\n\t\t\t})\n\n\t\t\t// Save the updated animation data\n\t\t\tthis.triggers.set(target, {\n\t\t\t\t...animationData,\n\t\t\t\tfromProperties,\n\t\t\t\ttoProperties,\n\t\t\t\tgsapAnimation,\n\t\t\t\ttrigger,\n\t\t\t})\n\t\t}\n\t}\n\n\t// Destroy the OnscrollDetection instance\n\tdestroy() {\n\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\tthis.stop()\n\t\tthis.triggers = null\n\t}\n}\n"],"names":["OnscrollDetection","options","gsap","ScrollTrigger","this","_gsap","_ScrollTrigger","elements","screen","triggers","Map","debug","scrollingClass","scrolledClass","stickyClass","stuckClass","eventHandlers","autoStart","undefined","init","_proto","prototype","register","_this","utils","toArray","forEach","element","index","trigger","getTrigger","getScreen","matchMedia","fromProperties","getFromProperties","startAt","backgroundColor","immediateRender","toProperties","getToProperties","add","gsapAnimation","fromTo","set","scrollTrigger","debugMode","error","console","log","start","on","event","handler","push","emit","_arguments","arguments","apply","slice","call","hasAttributes","hasAttribute","parentElement","document","querySelector","dataset","onscrollTrigger","onscrollScreen","animateFrom","getAnimateFrom","offset","getOffsetAndDistance","_extends","bottom","top","x","getDirection","y","_this2","animateTo","getAnimateTo","stickyProperties","getStickyProperties","isSticky","customEventName","getAttribute","progressEventName","dispatchCustomEvent","when","direction","window","dispatchEvent","CustomEvent","detail","target","getX","getY","ease","getStart","end","getEnd","invalidateOnRefresh","pin","pinSpacing","scrub","getScrub","markers","onUpdate","self","progress","toFixed","style","setProperty","dispatchProgressEvent","onToggle","isActive","onEnter","_ref","classList","onLeave","_ref2","remove","onEnterBack","_ref3","onLeaveBack","_ref4","attrs","every","attr","JSON","parse","onscrollFrom","onscrollTo","getOffset","parseInt","onscrollOffset","onscrollDirection","getDistanceOrSpeed","distance","triggerHeight","offsetHeight","_element$dataset$onsc","split","offsetValue","distanceValue","trim","endsWith","parseFloat","viewportHeight","innerHeight","scrollSpeed","onscrollSpeed","additionalDistance","includes","_scrollSpeed$split$ma","map","triggerElement","autoDistance","Math","abs","onscrollDelay","stickyOffset","_element$dataset$onsc2","onscrollStart","positionElement","_element$dataset$onsc4","onscrollEnd","clientHeight","scrollDistance","speedMultiplier","speedViewportPercentage","speedValues","isNaN","hasSpeed","hasPreset","hasSticky","hasReverse","group","triggerStart","triggerEnd","auto","offsetBefore","offsetAfter","delay","speed","preset","reverse","sticky","customEvent","onscrollCall","condition","message","warning","warn","groupEnd","fetch","elementOrIndex","Array","from","keys","value","key","refresh","restart","stop","getAll","kill","animationData","get","_ref5","clear","update","create","animation","destroy"],"mappings":"oOAKqB,IAAAA,eACpB,WAAA,SAAAA,EAAYC,EAAcC,EAAaC,YAA3BF,IAAAA,EAAU,CAAA,YAAIC,IAAAA,EAAO,WAAmB,IAAbC,IAAAA,EAAgB,MAEtDC,KAAKC,MAAQH,EACbE,KAAKE,eAAiBH,EAGtBC,KAAKG,SAAWN,EAAQM,UAAY,kBACpCH,KAAKI,OAASP,EAAQO,QAAU,sBAChCJ,KAAKK,SAAW,IAAIC,IACpBN,KAAKO,MAAQV,EAAQU,QAAS,EAG9BP,KAAKQ,eAAiBX,EAAQW,gBAAkB,eAChDR,KAAKS,cAAgBZ,EAAQY,eAAiB,eAC9CT,KAAKU,YAAcb,EAAQa,aAAe,YAC1CV,KAAKW,WAAad,EAAQc,YAAc,YAGxCX,KAAKY,cAAgB,CAAA,EAGrBZ,KAAKa,eAAkCC,IAAtBjB,EAAQgB,WAA0BhB,EAAQgB,UAGvDb,KAAKa,WACRb,KAAKe,MAEP,CAAC,IAAAC,EAAApB,EAAAqB,UAynBA,OAznBAD,EAGDE,SAAA,SAASpB,EAAMC,GACdC,KAAKC,MAAQH,EACbE,KAAKE,eAAiBH,CACvB,EAACiB,EAGDD,KAAA,WAAOI,IAAAA,EAENnB,KAAA,GAAIA,WAAKC,MAMT,GAAID,WAAKE,eAKT,IAECF,KAAKC,MAAMmB,MAAMC,QAAQrB,KAAKG,UAAUmB,QAAQ,SAACC,EAASC,GAEzD,IAAMC,EAAUN,EAAKO,WAAWH,GAG1BnB,EAASe,EAAKQ,UAAUJ,GAGxBK,EAAaT,EAAKlB,MAAM2B,aAGxBC,EAAiBV,EAAKW,kBAAkBP,GAE9CM,EAAeE,QAAU,CAAEC,gBAAiB,OAC5CH,EAAeI,iBAAkB,EAGjC,IAAMC,EAAef,EAAKgB,gBAAgBZ,EAASC,EAAOC,GAG1DG,EAAWQ,IAAIhC,EAAQ,WACtB,IAAMiC,EAAgBlB,EAAKlB,MAAMqC,OAAOf,EAASM,EAAgBK,GAEjEf,EAAKd,SAASkC,IAAIF,EAAcG,cAAe,CAC9CjB,QAAAA,EACAM,eAAAA,EACAK,aAAAA,EACAG,cAAAA,GAEF,GAGAlB,EAAKsB,UAAUlB,EAASC,EACzB,EACD,CAAE,MAAOkB,GAERC,QAAQD,MAAM,wCAAyCA,EACxD,MA3CCC,QAAQC,IAAI,iDANZD,QAAQC,IAAI,kCAkDd,EAAC5B,EAGD6B,MAAA,WAEC7C,KAAKe,MACN,EAACC,EAGD8B,GAAA,SAAGC,EAAOC,GACJhD,KAAKY,cAAcmC,KACvB/C,KAAKY,cAAcmC,GAAS,IAE7B/C,KAAKY,cAAcmC,GAAOE,KAAKD,EAChC,EAAChC,EAEDkC,KAAA,SAAKH,GAAgB,IAAAI,EAAAC,UAChBpD,KAAKY,cAAcmC,IACtB/C,KAAKY,cAAcmC,GAAOzB,QAAQ,SAAC0B,GAAO,OAAKA,EAAOK,gBAAAC,MAAAC,KAAAJ,EAAA,GAAS,EAEjE,EAACnC,EAGDU,WAAA,SAAWH,GACV,OAAIvB,KAAKwD,cAAcjC,EAAS,CAAC,yBAA2BA,EAAQkC,aAAa,yBAEzElC,EAAQmC,cACLnC,EAAQkC,aAAa,yBAEVE,SAASC,cAAcrC,EAAQsC,QAAQC,mBAI3DnB,QAAQD,MACkDnB,yDAAAA,EAAQsC,QAAQC,iBAEnEvC,GAIDA,CAET,EAACP,EAGDW,UAAA,SAAUJ,GACT,OAAOA,EAAQkC,aAAa,wBAA0BlC,EAAQsC,QAAQE,eAAiB/D,KAAKI,MAC7F,EAACY,EAGDc,kBAAA,SAAkBP,GACjB,IAAMyC,EAAchE,KAAKiE,eAAe1C,GAChC2C,EAAWlE,KAAKmE,qBAAqB5C,GAArC2C,OAER,OAAAE,EAAA,CAAA,EACIJ,EAAW,CACdK,OAAQrE,KAAKwD,cAAcjC,EAAS,CAAC,qBAAsB,0BAA4B,OAAS,KAChG+C,IACCtE,KAAKwD,cAAcjC,EAAS,CAAC,yBAC5BvB,KAAKwD,cAAcjC,EAAS,CAAC,0BAC3B,OACA,KACJgD,GACCvE,KAAKwD,cAAcjC,EAAS,CAAC,6BACG,MAA/BvB,KAAKwE,aAAajD,IAAmD,OAA/BvB,KAAKwE,aAAajD,GAEtD,KADA2C,EAEJO,GACEzE,KAAKwD,cAAcjC,EAAS,CAAC,6BAC7BvB,KAAKwD,cAAcjC,EAAS,CAAC,8BACG,MAA/BvB,KAAKwE,aAAajD,IAAmD,OAA/BvB,KAAKwE,aAAajD,IACvD2C,EACA,MAEN,EAAClD,EAGDmB,gBAAA,SAAgBZ,EAASC,EAAOC,GAAS,IAAAiD,EAAA1E,KAClC2E,EAAY3E,KAAK4E,aAAarD,GAC9BsD,EAAmB7E,KAAK8E,oBAAoBvD,GAC5CwD,EAAW/E,KAAKwD,cAAcjC,EAAS,CAAC,yBACxCyD,EAAkBzD,EAAQ0D,aAAa,sBACvCC,EAAoB3D,EAAQ0D,aAAa,0BAGzCE,EAAsB,SAACC,EAAMC,GAC9BL,GACHM,OAAOC,cACN,IAAIC,YAAYR,EAAiB,CAChCS,OAAQ,CACPC,OAAQnE,EACR8D,UAAyB,IAAdA,EAAkB,OAAS,KACtCD,KAAAA,KAKL,EAiBA,OAAAhB,EAAA,CAAA,EACIO,EAAS,CACZJ,EAAGvE,KAAK2F,KAAKpE,GACbkD,EAAGzE,KAAK4F,KAAKrE,GACbsE,KAAM,OACNrD,cAAe,CACdf,QAASsD,EAAWxD,EAAUE,EAC9BoB,MAAO7C,KAAK8F,SAASvE,GACrBwE,IAAK/F,KAAKgG,OAAOzE,GACjB0E,qBAAqB,EACrBC,IAAKrB,EAAiBqB,IACtBC,WAAYtB,EAAiBsB,WAC7BC,MAAOpG,KAAKqG,SAAS9E,GACrB+E,QAAStG,KAAKwD,cAAcjC,EAAS,CAAC,wBACtCgF,SAAU,SAACC,GACV,IAAIC,EAAWD,EAAKC,SAASC,QAAQ,GACrCnF,EAAQoF,MAAMC,YAAY,qBAAsBH,GAE5CvB,GAhCuB,SAACuB,EAAUpB,GACpCH,GACHI,OAAOC,cACN,IAAIC,YAAYN,EAAmB,CAClCO,OAAQ,CACPlE,QAASA,EACTkF,SAAUA,EACVpB,UAAyB,IAAdA,EAAkB,OAAS,QAK3C,CAqBIwB,CAAsBJ,EAAUD,EAAKnB,UAEvC,EACAyB,SAAU,SAACN,GACLA,EAAKO,UACTxF,EAAQoF,MAAMC,YAAY,qBAAsB,EAElD,EACAI,QAAS,SAAAC,GAAG,IAAA5B,EAAS4B,EAAT5B,UACX9D,EAAQ2F,UAAU9E,IAAIsC,EAAKlE,eAAgBkE,EAAKjE,eAC5CsE,GACHxD,EAAQ2F,UAAU9E,IAAIsC,EAAKhE,YAAagE,EAAK/D,YAE9CwE,EAAoB,UAAWE,GAC/BX,EAAKxB,KAAK,UAAW3B,EACtB,EACA4F,QAAS,SAAAC,GAAG,IAAA/B,EAAS+B,EAAT/B,UACX9D,EAAQ2F,UAAUG,OAAO3C,EAAKlE,gBAC1BuE,GACHxD,EAAQ2F,UAAUG,OAAO3C,EAAKhE,aAE/ByE,EAAoB,UAAWE,GAC/BX,EAAKxB,KAAK,UAAW3B,EACtB,EACA+F,YAAa,SAAAC,GAAG,IAAAlC,EAASkC,EAATlC,UACf9D,EAAQ2F,UAAU9E,IAAIsC,EAAKlE,gBACvBuE,GACHxD,EAAQ2F,UAAU9E,IAAIsC,EAAKhE,aAE5ByE,EAAoB,cAAeE,GACnCX,EAAKxB,KAAK,cAAe3B,EAC1B,EACAiG,YAAa,SAAAC,GAAmB,IAAhBpC,EAASoC,EAATpC,UACf9D,EAAQ2F,UAAUG,OAAO3C,EAAKlE,gBAC1BuE,GACHxD,EAAQ2F,UAAUG,OAAO3C,EAAKhE,aAE/ByE,EAAoB,cAAeE,GACnCX,EAAKxB,KAAK,cAAe3B,EAC1B,IAGH,EAACP,EAGD8D,oBAAA,SAAoBvD,GACnB,OAAIA,EAAQkC,aAAa,wBACjB,CAAEyC,KAAK,EAAMC,YAAY,GAEzB,CAAED,KAAK,EAAOC,YAAY,EAEnC,EAACnF,EAGDwC,cAAA,SAAcjC,EAASmG,GACtB,OAAOA,EAAMC,MAAM,SAACC,GAAS,OAAArG,EAAQkC,aAAamE,EAAK,EACxD,EAAC5G,EAGDiD,eAAA,SAAe1C,GACd,OAAOA,EAAQkC,aAAa,sBAAwBoE,KAAKC,MAAMvG,EAAQsC,QAAQkE,cAAgB,EAChG,EAAC/G,EAGD4D,aAAA,SAAarD,GACZ,OAAOA,EAAQkC,aAAa,oBAAsBoE,KAAKC,MAAMvG,EAAQsC,QAAQmE,YAAc,EAC5F,EAAChH,EAGDiH,UAAA,SAAU1G,GACT,OAAOA,EAAQkC,aAAa,wBAA0ByE,SAAS3G,EAAQsC,QAAQsE,gBAAkB,IAClG,EAACnH,EAGDwD,aAAA,SAAajD,GACZ,OAAOA,EAAQsC,QAAQuE,kBAAoB7G,EAAQsC,QAAQuE,kBAAoB,GAChF,EAACpH,EAGD2E,KAAA,SAAKpE,GACJ,OAAIA,EAAQkC,aAAa,wBAEzB,MAECzD,KAAKwD,cAAcjC,EAAS,CAAC,6BACG,MAA/BvB,KAAKwE,aAAajD,IAAmD,OAA/BvB,KAAKwE,aAAajD,QAF1D,EAIQvB,KAAKqI,mBAAmB9G,EAEjC,EAACP,EAGD4E,KAAA,SAAKrE,GACJ,OAAIA,EAAQkC,aAAa,wBAEzB,MAEEzD,KAAKwD,cAAcjC,EAAS,CAAC,6BAC7BvB,KAAKwD,cAAcjC,EAAS,CAAC,8BACG,MAA/BvB,KAAKwE,aAAajD,IAAmD,OAA/BvB,KAAKwE,aAAajD,SAE9C8G,mBAAmB9G,QALhC,CAOD,EAACP,EAGDmD,qBAAA,SAAqB5C,GAEpB,GAAIA,EAAQkC,aAAa,wBACxB,MAAO,CAAES,OAAQ,KAAMoE,SAAU,MAGlC,IAAIpE,EAAS,KACToE,EAAW,KAETC,EADiBvI,KAAK0B,WAAWH,GACFiH,aAErC,GAAIjH,EAAQkC,aAAa,wBAAyB,CACjD,IAAAgF,EAAqClH,EAAQsC,QAAQsE,eAAeO,MAAM,KAAnEC,EAAWF,EAAEG,GAAAA,EAAaH,EAGjC,GAECvE,EAFGyE,EAAYE,OAAOC,SAAS,KACNC,WAAWJ,GAAe,IACvBJ,EAEnBQ,WAAWJ,GAMpBL,EAFGM,EAAcC,OAAOC,SAAS,KACNC,WAAWH,GAAiB,IACvBL,EAErBQ,WAAWH,EAExB,CAEA,MAAO,CAAE1E,OAAAA,EAAQoE,SAAAA,EAClB,EAACtH,EAGDqH,mBAAA,SAAmB9G,GAClB,IAAQ+G,EAAatI,KAAKmE,qBAAqB5C,GAAvC+G,SACFU,EAAiB1D,OAAO2D,YAC1BC,EAAc3H,EAAQsC,QAAQsF,cAC9BC,EAAqB,EAGzB,GAAIF,GAAeA,EAAYG,SAAS,KAAM,CAC7C,IAAAC,EAA4BJ,EAAYR,MAAM,KAAKa,IAAIR,YAIvDK,EAJwBE,EAGxBJ,GACmC,IAAOF,GAD1CE,EAHYI,EAAA,IAOM,IACjBF,IAAuB,EAEzB,MACCF,EAAcH,WAAWG,GAAe,KAGzC,GAAIlJ,KAAKwD,cAAcjC,EAAS,CAAC,uBAAwB,CACxD,IAAMiI,EAAiBxJ,KAAK0B,WAAWH,GACjCkI,EAAeC,KAAKC,IAAIH,EAAehB,aAAejH,EAAQiH,cACpE,YAAYhF,cAAcjC,EAAS,CAAC,2BAA6BkI,EAAeA,CACjF,CAAO,OAAIzJ,KAAKwD,cAAcjC,EAAS,CAAC,wBAEhB2H,EADD3H,EAAQiH,aACuBY,EAE9B,OAAbd,EACHA,OADGA,CAGZ,EAACtH,EAGDqF,SAAA,SAAS9E,GACR,OAAIvB,KAAKwD,cAAcjC,EAAS,CAAC,yBACzB2G,SAAS3G,EAAQsC,QAAQ+F,cAIlC,EAAC5I,EAGD8E,SAAA,SAASvE,GACR,GAAIA,EAAQkC,aAAa,wBAAyB,CACjD,IAAIoG,EAAe,EAEnB,GAAItI,EAAQkC,aAAa,wBAAyB,CACjD,IAAAqG,EAAsBvI,EAAQsC,QAAQsE,eAAeO,MAAM,KAC3DmB,EAAed,WADGe,EAClBD,GACD,CAEA,OAAQtI,EAAQsC,QAAQkG,cAAgBxI,EAAQsC,QAAQkG,cAAgB,WAAa,KAAOF,CAC7F,CACC,GAAA7J,KAAKwD,cAAcjC,EAAS,CAAC,uBAAwB,0BACtB,MAA/BvB,KAAKwE,aAAajD,KACjBvB,KAAKwD,cAAcjC,EAAS,CAAC,sBAAuB,yBACpD,CACD,IAAOoH,EAAepH,EAAQsC,QAAQsE,eAAeO,MAAM,KAC3D,GAGA,OAHsBK,WAAWJ,GAAe,EAAI,QAAUA,EAAc,UAGrEqB,SACR,CACC,OAAOzI,EAAQsC,QAAQkG,cAAgBxI,EAAQsC,QAAQkG,cAAgB,YAEzE,EAAC/I,EAGDgF,OAAA,SAAOzE,GACN,GAAIA,EAAQkC,aAAa,wBAAyB,CACjD,IAAMhC,EAAUzB,KAAK0B,WAAWH,GAC5BsI,EAAe,EAEnB,GAAItI,EAAQkC,aAAa,wBAAyB,CACjD,IAAAwG,EAA0B1I,EAAQsC,QAAQsE,eAAeO,MAAM,KAC/DmB,EAAed,WADOkB,EAAA,GAEvB,CAIA,OAAO1I,EAAQsC,QAAQqG,YAAc3I,EAAQsC,QAAQqG,YAAc,MAF5CzI,EAAQ0I,aAAe5I,EAAQ4I,aAAeN,EAGtE,CAAO,GAAI7J,KAAKwD,cAAcjC,EAAS,CAAC,0BAA4BA,EAAQkC,aAAa,qBAAsB,CAC9G,IAAM2G,EAAiBpK,KAAKqI,mBAAmB9G,GAE/C,MAAA,UAAgB6I,GAAkB,EAAI,KAAO,MAAOV,KAAKC,IAAIS,GAC9D,MAAA,CAAO,OACNpK,KAAKwD,cAAcjC,EAAS,CAAC,uBAAwB,0BACtB,MAA/BvB,KAAKwE,aAAajD,KACjBvB,KAAKwD,cAAcjC,EAAS,CAAC,oBAAqB,yBAG7B,WADIA,EAAQsC,QAAQsE,eAAeO,MAAM,KAAzC,GAIfsB,OAEAzI,EAAQsC,QAAQqG,YAAc3I,EAAQsC,QAAQqG,YAAc,YAErE,EAAClJ,EAGDyB,UAAA,SAAUlB,EAASC,GAClB,GAAKxB,KAAKO,OAAUP,KAAKwD,cAAcjC,EAAS,CAAC,wBAAjD,CAEA,IAAQ2C,EAA0BlE,KAAKmE,qBAAqB5C,GAApD2C,OACJmG,EAAkB,EAClBC,EAA0B,EAE9B,GAAItK,KAAKwD,cAAcjC,EAAS,CAAC,wBAAyB,CACzD,IAAMgJ,EAAchJ,EAAQsC,QAAQsF,cAAcT,MAAM,KAExD2B,EAAkBtB,WAAWwB,EAAY,IACzCD,EAA0BvB,WAAWwB,EAAY,IAGjDF,EAAkBG,MAAMH,GAAmB,EAAIA,EAC/CC,EAA0BE,MAAMF,GAA2B,EAAIA,CAChE,CAEA,IAAM5C,EAAQnG,EAAQsC,QAChB4G,EAAWzK,KAAKwD,cAAcjC,EAAS,CAAC,wBACxCmJ,EAAY1K,KAAKwD,cAAcjC,EAAS,CAAC,yBACzCoJ,EAAY3K,KAAKwD,cAAcjC,EAAS,CAAC,yBACzCqJ,EAAa5K,KAAKwD,cAAcjC,EAAS,CAAC,0BAEhDoB,QAAQkI,MAAK,yCAAyCrJ,EAAQ,GAAC,KAC/DmB,QAAQC,IAAI,CACXrB,QAASA,EACTE,QAASzB,KAAK0B,WAAWH,GACzBuJ,aAAc9K,KAAK8F,SAASvE,GAC5BwJ,WAAY/K,KAAKgG,OAAOzE,GACxByJ,KAAMhL,KAAKwD,cAAcjC,EAAS,CAAC,uBACnC0J,aAAc/G,EACdgH,YAAalL,KAAKqI,mBAAmB9G,GACrC4J,MAAOnL,KAAKqG,SAAS9E,GACrBnB,OAAQJ,KAAK2B,UAAUJ,GACvB6J,MAAOX,EACD1B,WACHsB,EAAkB9I,EAAQ4I,aAAgBG,EAA0B,IAAOhF,OAAO2D,aAC5EF,KAAAA,WAAWsB,GAAgB,sBAAsBtB,WACvDuB,GACC,4BACD,KACHjF,UAAWrF,KAAKwD,cAAcjC,EAAS,CAAC,4BAA8BmG,EAAMU,kBAAoB,IAChGiD,OAAQX,EACRY,QAASV,EACTW,OAAQZ,EACR3G,YAAahE,KAAKiE,eAAe1C,GACjCoD,UAAW3E,KAAK4E,aAAarD,GAC7BiK,YAAaxL,KAAKwD,cAAcjC,EAAS,CAAC,uBAAyBmG,EAAM+D,aAAe,OAGxE,CAChB,CACCC,UAAW1L,KAAKwD,cAAcjC,EAAS,CAAC,0BAA4BkJ,EACpEkB,QAAS,oDAEV,CACCD,UACChB,IACC1K,KAAKwD,cAAcjC,EAAS,CAAC,yBAC7BvB,KAAKwD,cAAcjC,EAAS,CAAC,uBAC/BoK,QAAS,6EAEV,CAAED,UAAWf,GAAaF,EAAUkB,QAAS,2DAC7C,CACCD,UACCf,GACA3K,KAAKwD,cAAcjC,EAAS,CAAC,0BAC7BvB,KAAKwD,cAAcjC,EAAS,CAAC,sBAC9BoK,QAAS,oFAEV,CACCD,UACCd,KACE5K,KAAKwD,cAAcjC,EAAS,CAAC,wBAC9BvB,KAAKwD,cAAcjC,EAAS,CAAC,0BAC7BoJ,GACAF,GACFkB,QACC,qHAEF,CAAED,UAAWjB,GAAYC,EAAWiB,QAAS,8DAC7C,CACCD,UAA0C,MAA/B1L,KAAKwE,aAAajD,IAAoBmJ,EACjDiB,QAAS,6DAIFrK,QAAQ,SAACsK,GAAY,OAAAA,EAAQF,WAAa/I,QAAQkJ,KAAKD,EAAQD,QAAQ,GAChFhJ,QAAQmJ,UAxFkE,CAyF3E,EAAC9K,EAGD+K,MAAA,SAAMC,GACL,GAA8B,iBAAnBA,EAGV,OADaC,MAAMC,KAAKlM,KAAKK,SAAS8L,QAC1BH,GAGZ,IAAIvK,EAAU,KAMd,OALAzB,KAAKK,SAASiB,QAAQ,SAAC8K,EAAOC,GACzBD,EAAM7K,UAAYyK,IACrBvK,EAAU4K,EAEZ,GACO5K,CAET,EAACT,EAGDsL,QAAA,WACCtM,KAAKE,eAAeoM,UAGpBtM,KAAKkD,KAAK,UACX,EAAClC,EAGDuL,QAAA,WAECvM,KAAKwM,OAGLxM,KAAKE,eAAeuM,SAASnL,QAAQ,SAACG,GAAO,OAAKA,EAAQiL,MAAM,GAGhE1M,KAAKE,eAAeoM,UAGpBtM,KAAKe,OAGLf,KAAKkD,KAAK,UACX,EAAClC,EAGDwL,KAAA,SAAK9G,GACJ,QADIA,IAAAA,IAAAA,EAAS,MACTA,EAAQ,CAEX,IAAMiH,EAAgB3M,KAAKK,SAASuM,IAAIlH,GACpCiH,IACHA,EAActK,cAAcqK,OAC5B1M,KAAKK,SAAQ,OAAQqF,GAEvB,MAEC1F,KAAKK,SAASiB,QAAQ,SAAAuL,GAAgBA,EAAbxK,cACVqK,MACf,GACA1M,KAAKK,SAASyM,QAIf9M,KAAKkD,KAAK,OAAQwC,EACnB,EAAC1E,EAGD+L,OAAA,SAAOrH,EAAQ7D,EAAgBK,GAC9B,IAAMyK,EAAgB3M,KAAKK,SAASuM,IAAIlH,GAExC,GAAIiH,EAAe,CAElBA,EAActK,cAAcqK,OAG5B,IAAMrK,EAAgBrC,KAAKC,MAAMqC,OAAOqK,EAAcpL,QAASM,EAAgBK,GAGzET,EAAUzB,KAAKE,eAAe8M,OAAO,CAC1CC,UAAW5K,EACXZ,QAASzB,KAAK0B,WAAWiL,EAAcpL,SACvCsB,MAAO7C,KAAK8F,SAAS6G,EAAcpL,SACnCwE,IAAK/F,KAAKgG,OAAO2G,EAAcpL,SAC/B6E,MAAOpG,KAAKqG,SAASsG,EAAcpL,WAIpCvB,KAAKK,SAASkC,IAAImD,EAAMtB,EACpBuI,CAAAA,EAAAA,EACH9K,CAAAA,eAAAA,EACAK,aAAAA,EACAG,cAAAA,EACAZ,QAAAA,IAEF,CACD,EAACT,EAGDkM,QAAA,WAEClN,KAAKwM,OACLxM,KAAKK,SAAW,IACjB,EAACT,CAAA,CAppBD"}